const result = (+null == false) < 1 ** 5;
console.log(result); 

'number' + 3 + 3 
//result = number33 - конкатенація ('number' - рядок типу string, 3 - число, рядок і число не додаються, а об'єднуються)

null + 3 
//result = 3 (null - відсутність значення, 3 - число)

5 && "qwerty" 
//result = qwerty (обидва значення істинні, а && оператор повертає останнє істинне)

+'40' + +'2' + "hillel" 
/* result = 42hillel ((+) перед значенням це унарний плюс, що перетворює значення в лапках на числа, які додаються.
"hillel" - це рядок, тому об'єднуємо 42 і hillel)*/

'10' - 5 === 6; 
/*result = false (10 в лапках - рядок, але операція віднімання враховує його як число , 
5 - число. === оператор порівняння. 10-5 = 5, тому не є рівним 6)*/

true + false 
//result = 1 (обидва boolean значення. Операція (+) перетворює true на 1, а false на 0. 1+0=1)

'4px' - 3 
/*result = NaN ('4px' це рядок, 3 це число. Віднімання перетворює рядок на число, а 4px не є валідним числом, тому NaN - not a number.
Будь-яке обчислення з NaN повертає NaN) */

'4' - 3
//result = 1 (віднімання перетворює рядок '4' на число 4. А 4-3 = 1)

'6' + 3 ** 0
//result = 61 (3 підносимо до степеня 0 = 1, додаємо рядок '6' до числа 1, тому об'єднуємо)

12 / '6' 
//result = 2 (12 ділимо на рядок '6', що перетворює його на число при діленні)

'10' + (5 === 6);
//result = 10false ('10' це рядок який ми обєднуємо з false, бо 5 не дорівнює 6)

null == ''
/*result = false (відсутність значення і пустий рядок не є рівними, null можна прирівняти при нестрогому порівнянні до undefined, 
але не пустого рядка)*/

3 ** (9 / 3)
//result = 27 (3 підносимо до ступеня 3)

!!'false' == !!'true'
//result = true (!! перетворює обидва рядки на true, тому що будь-який непустий рядок є істинним значенням)

0 || '0' && 1
/*result = 1 (&&(і) пріоритетніше ніж ||(або). && повертає останнє істинне, тому 1, бо '0' є непустим рядком, тому теж ітсинне. 
|| повертає перше істинне значення, а 0 є фолсі значенням)*/

(+null == false) < 1
/*result = false (+null перетворює на 0, false теж 0. Отже 0 = 0, що є true. true при порівнянні з числом перетворюється на 1. 
Отже  1<1 , що є false)*/

false && true || true
//result = true (&&(і) пріоритетніше ніж ||(або). && повертає перше фолсі. || повертає перше істинне значення)

false && (false || true);
//result = false (|| повертає перше істинне значення і є пріоритетнішим, бо в дужках, && повертає перше фолсі)

(+null == false) < 1 ** 5;
/*result = false (+null це 0, false при нестрогому порівнянні теж 0 -> true; 1 в степені 5 = 1; true при порівнянні з числами = 1, 
отже 1<1 = false)*/